function belief = computeBeliefOriginal(notes)

    k = detectKeyOriginal(notes);
    majorKeyBelief = [0.279000000000000,0.00800000000000000,0.0254000000000000,0.0106000000000000,0.0166000000000000,0.0778000000000000,0.00440000000000000,0.0852000000000000,0.0112000000000000,0.0134000000000000,0.0194000000000000,0.00740000000000000,0.0886000000000000,0.0154000000000000,0.0508000000000000,0.00420000000000000,0.0822000000000000,0.0384000000000000,0.0146000000000000,0.0206000000000000,0.0148000000000000,0.0804000000000000,0.00600000000000000,0.0256000000000000];
    minorKeyBelief = [0.0754000000000000,0.0198000000000000,0.00960000000000000,0.0768000000000000,0.0140000000000000,0.0146000000000000,0.00900000000000000,0.0510000000000000,0.0632000000000000,0.00280000000000000,0.0230000000000000,0.0154000000000000,0.340600000000000,0.0128000000000000,0.0168000000000000,0.0364000000000000,0.0312000000000000,0.0402000000000000,0.0160000000000000,0.0250000000000000,0.0478000000000000,0.0374000000000000,0.00800000000000000,0.0132000000000000];
    
    if k < 12 %Major Key
        belief = circshift(majorKeyBelief, [0,k-1]);
    else
        belief = circshift(minorKeyBelief, [0,k-13]);
    end
    
    %Next, need to multiply by the transition matrix associated with the
    %old algorithm. We first need to make that transition matrix.
    
    load('pomdpEnvironment.mat', 'TransitionMatrix');
    belief = belief*TransitionMatrix;
    
end